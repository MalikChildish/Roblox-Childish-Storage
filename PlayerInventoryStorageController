-- PlayerInventoryStorageController.lua
-- Malik Allen LLC, Roblox Studio Pro GPT

local Player = game.Players.LocalPlayer

-- References to UI elements within PlayerInventoryStorage
local InventorySlots = script.Parent.InventorySlots
local InfoPanel = script.Parent.InfoPanel
local PutAwayButton = InfoPanel:WaitForChild("PutAwayButton")
local NextArrow = script.Parent.NextArrow
local PreviousArrow = script.Parent.PreviousArrow
local PageIndicator = script.Parent.PageIndicator
local SpaceCount = script.Parent.SpaceCount
local InfoDescription = InfoPanel.Description
local InfoItemName = InfoPanel.ItemName

-- Modules and Events
local MasterFolder = game.ReplicatedStorage.InventorySystem
local ItemDB = require(MasterFolder.Modules.ItemData)
local Events = MasterFolder.Events
local UpdateStorageUIEvent = Events.ServerClient.UpdateStorageUI
local AddToStorageEvent = Events.ClientServer.AddToStorage
local LoadPlayerDataEvent = game.ReplicatedStorage.PlayerDataSystem.Events.ServerClient.LoadData

-- Static
local SlotCount = 9

-- Tracking Variables
local CurrentInventoryItems = {}
local CurrentPages = {}
local CurrentSelectedPage = 1
local CurrentSelectedItem = nil

InfoPanel.Visible = false

local function GetPages(items)
	local pages = {}
	local currentPage = 1
	for i, item in ipairs(items) do
		if not pages[currentPage] then
			pages[currentPage] = {}
		end
		if #pages[currentPage] < SlotCount then
			table.insert(pages[currentPage], item)
		end
		if #pages[currentPage] >= SlotCount then
			currentPage += 1
		end
	end
	return pages
end

local function UpdateInventoryDisplay()
	local page = CurrentPages[CurrentSelectedPage] or {}
	for i, slot in ipairs(InventorySlots:GetChildren()) do
		slot:SetAttribute("CurrentItem", nil)
		slot.Image = ""
		slot.ImageColor3 = Color3.new(1, 1, 1)
		local itemName = page[i]
		if itemName then
			local itemInfo = ItemDB.Items[itemName]
			if itemInfo then
				slot:SetAttribute("CurrentItem", itemName)
				slot.Image = itemInfo.Image
			end
		end
	end
	PageIndicator.Text = string.format("Page %d of %d", CurrentSelectedPage, #CurrentPages)
	print("Inventory UI updated on client with new items.") -- Debug statement
end

local function UpdateInventoryItems(items)
	CurrentInventoryItems = items
	CurrentPages = GetPages(items)
	CurrentSelectedPage = 1
	UpdateInventoryDisplay()
end

local function UpdateSpaceCount()
	local playerBagSpace = Player:GetAttribute("BagSpace") or 0
	SpaceCount.Text = string.format("%d / %d", #CurrentInventoryItems, playerBagSpace)
end

Player:GetAttributeChangedSignal("BagSpace"):Connect(UpdateSpaceCount)

local function UpdateInfoPanel(selectedSlot)
	if CurrentSelectedItem then
		CurrentSelectedItem.ImageColor3 = Color3.new(1, 1, 1)
	end
	CurrentSelectedItem = selectedSlot
	if CurrentSelectedItem then
		CurrentSelectedItem.ImageColor3 = Color3.new(1, 0, 0.0156863)
		local itemName = CurrentSelectedItem:GetAttribute("CurrentItem")
		if itemName then
			local itemInfo = ItemDB.Items[itemName]
			InfoPanel.Visible = true
			InfoItemName.Text = itemName
			InfoDescription.Text = itemInfo.Description or "No Description Available"
			PutAwayButton.Visible = true
		else
			InfoPanel.Visible = false
		end
	else
		InfoPanel.Visible = false
	end
end

NextArrow.MouseButton1Click:Connect(function()
	if CurrentPages[CurrentSelectedPage + 1] then
		CurrentSelectedPage += 1
		UpdateInventoryDisplay()
		UpdateInfoPanel(nil)
	end
end)

PreviousArrow.MouseButton1Click:Connect(function()
	if CurrentSelectedPage > 1 then
		CurrentSelectedPage -= 1
		UpdateInventoryDisplay()
		UpdateInfoPanel(nil)
	end
end)

LoadPlayerDataEvent.OnClientEvent:Connect(function(data)
	UpdateInventoryItems(data.Inventory or {})
	UpdateSpaceCount()
end)

UpdateStorageUIEvent.OnClientEvent:Connect(function(data)
	UpdateInventoryItems(data.Inventory or {})
	UpdateSpaceCount()
	print("Received updated inventory from server.") -- Debug statement
end)

for _, slot in ipairs(InventorySlots:GetChildren()) do
	slot.MouseButton1Click:Connect(function()
		UpdateInfoPanel(slot)
	end)
end

PutAwayButton.MouseButton1Click:Connect(function()
	if CurrentSelectedItem and CurrentSelectedItem:GetAttribute("CurrentItem") then
		local selectedItemName = CurrentSelectedItem:GetAttribute("CurrentItem")
		AddToStorageEvent:FireServer(selectedItemName, 1)
		InfoPanel.Visible = false
	end
end)
